<?php
/**
 * SpDATSEARCHFETC0PersonResult
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * api.riskscreen.com
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * SpDATSEARCHFETC0PersonResult Class Doc Comment
 *
 * @category    Class
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SpDATSEARCHFETC0PersonResult implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'spDATSEARCH_FETC0_Person_Result';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'daen_id' => 'int',
        'daen_serial' => 'int',
        'daen_stet_id' => 'int',
        'daen_stet_name' => 'string',
        'daen_firstname' => 'string',
        'daen_firstnamejcb' => 'double',
        'daen_middlename' => 'string',
        'daen_middlenamejcb' => 'double',
        'daen_lastname' => 'string',
        'daen_lastnamejcb' => 'double',
        'daen_fullname' => 'string',
        'daen_title' => 'string',
        'daen_suffix' => 'string',
        'daen_partition' => 'string',
        'daen_reverse' => 'bool',
        'daen_ispep' => 'bool',
        'daen_isrca' => 'bool',
        'daen_iswbl' => 'bool',
        'daen_issan' => 'bool',
        'daen_isavm' => 'bool',
        'daen_isunk' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'daen_id' => 'int32',
        'daen_serial' => 'int32',
        'daen_stet_id' => 'int32',
        'daen_stet_name' => null,
        'daen_firstname' => null,
        'daen_firstnamejcb' => 'double',
        'daen_middlename' => null,
        'daen_middlenamejcb' => 'double',
        'daen_lastname' => null,
        'daen_lastnamejcb' => 'double',
        'daen_fullname' => null,
        'daen_title' => null,
        'daen_suffix' => null,
        'daen_partition' => null,
        'daen_reverse' => null,
        'daen_ispep' => null,
        'daen_isrca' => null,
        'daen_iswbl' => null,
        'daen_issan' => null,
        'daen_isavm' => null,
        'daen_isunk' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'daen_id' => 'DAEN_ID',
        'daen_serial' => 'DAEN_SERIAL',
        'daen_stet_id' => 'DAEN_STET_ID',
        'daen_stet_name' => 'DAEN_STET_NAME',
        'daen_firstname' => 'DAEN_FIRSTNAME',
        'daen_firstnamejcb' => 'DAEN_FIRSTNAMEJCB',
        'daen_middlename' => 'DAEN_MIDDLENAME',
        'daen_middlenamejcb' => 'DAEN_MIDDLENAMEJCB',
        'daen_lastname' => 'DAEN_LASTNAME',
        'daen_lastnamejcb' => 'DAEN_LASTNAMEJCB',
        'daen_fullname' => 'DAEN_FULLNAME',
        'daen_title' => 'DAEN_TITLE',
        'daen_suffix' => 'DAEN_SUFFIX',
        'daen_partition' => 'DAEN_PARTITION',
        'daen_reverse' => 'DAEN_REVERSE',
        'daen_ispep' => 'DAEN_ISPEP',
        'daen_isrca' => 'DAEN_ISRCA',
        'daen_iswbl' => 'DAEN_ISWBL',
        'daen_issan' => 'DAEN_ISSAN',
        'daen_isavm' => 'DAEN_ISAVM',
        'daen_isunk' => 'DAEN_ISUNK'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'daen_id' => 'setDaenId',
        'daen_serial' => 'setDaenSerial',
        'daen_stet_id' => 'setDaenStetId',
        'daen_stet_name' => 'setDaenStetName',
        'daen_firstname' => 'setDaenFirstname',
        'daen_firstnamejcb' => 'setDaenFirstnamejcb',
        'daen_middlename' => 'setDaenMiddlename',
        'daen_middlenamejcb' => 'setDaenMiddlenamejcb',
        'daen_lastname' => 'setDaenLastname',
        'daen_lastnamejcb' => 'setDaenLastnamejcb',
        'daen_fullname' => 'setDaenFullname',
        'daen_title' => 'setDaenTitle',
        'daen_suffix' => 'setDaenSuffix',
        'daen_partition' => 'setDaenPartition',
        'daen_reverse' => 'setDaenReverse',
        'daen_ispep' => 'setDaenIspep',
        'daen_isrca' => 'setDaenIsrca',
        'daen_iswbl' => 'setDaenIswbl',
        'daen_issan' => 'setDaenIssan',
        'daen_isavm' => 'setDaenIsavm',
        'daen_isunk' => 'setDaenIsunk'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'daen_id' => 'getDaenId',
        'daen_serial' => 'getDaenSerial',
        'daen_stet_id' => 'getDaenStetId',
        'daen_stet_name' => 'getDaenStetName',
        'daen_firstname' => 'getDaenFirstname',
        'daen_firstnamejcb' => 'getDaenFirstnamejcb',
        'daen_middlename' => 'getDaenMiddlename',
        'daen_middlenamejcb' => 'getDaenMiddlenamejcb',
        'daen_lastname' => 'getDaenLastname',
        'daen_lastnamejcb' => 'getDaenLastnamejcb',
        'daen_fullname' => 'getDaenFullname',
        'daen_title' => 'getDaenTitle',
        'daen_suffix' => 'getDaenSuffix',
        'daen_partition' => 'getDaenPartition',
        'daen_reverse' => 'getDaenReverse',
        'daen_ispep' => 'getDaenIspep',
        'daen_isrca' => 'getDaenIsrca',
        'daen_iswbl' => 'getDaenIswbl',
        'daen_issan' => 'getDaenIssan',
        'daen_isavm' => 'getDaenIsavm',
        'daen_isunk' => 'getDaenIsunk'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['daen_id'] = isset($data['daen_id']) ? $data['daen_id'] : null;
        $this->container['daen_serial'] = isset($data['daen_serial']) ? $data['daen_serial'] : null;
        $this->container['daen_stet_id'] = isset($data['daen_stet_id']) ? $data['daen_stet_id'] : null;
        $this->container['daen_stet_name'] = isset($data['daen_stet_name']) ? $data['daen_stet_name'] : null;
        $this->container['daen_firstname'] = isset($data['daen_firstname']) ? $data['daen_firstname'] : null;
        $this->container['daen_firstnamejcb'] = isset($data['daen_firstnamejcb']) ? $data['daen_firstnamejcb'] : null;
        $this->container['daen_middlename'] = isset($data['daen_middlename']) ? $data['daen_middlename'] : null;
        $this->container['daen_middlenamejcb'] = isset($data['daen_middlenamejcb']) ? $data['daen_middlenamejcb'] : null;
        $this->container['daen_lastname'] = isset($data['daen_lastname']) ? $data['daen_lastname'] : null;
        $this->container['daen_lastnamejcb'] = isset($data['daen_lastnamejcb']) ? $data['daen_lastnamejcb'] : null;
        $this->container['daen_fullname'] = isset($data['daen_fullname']) ? $data['daen_fullname'] : null;
        $this->container['daen_title'] = isset($data['daen_title']) ? $data['daen_title'] : null;
        $this->container['daen_suffix'] = isset($data['daen_suffix']) ? $data['daen_suffix'] : null;
        $this->container['daen_partition'] = isset($data['daen_partition']) ? $data['daen_partition'] : null;
        $this->container['daen_reverse'] = isset($data['daen_reverse']) ? $data['daen_reverse'] : null;
        $this->container['daen_ispep'] = isset($data['daen_ispep']) ? $data['daen_ispep'] : null;
        $this->container['daen_isrca'] = isset($data['daen_isrca']) ? $data['daen_isrca'] : null;
        $this->container['daen_iswbl'] = isset($data['daen_iswbl']) ? $data['daen_iswbl'] : null;
        $this->container['daen_issan'] = isset($data['daen_issan']) ? $data['daen_issan'] : null;
        $this->container['daen_isavm'] = isset($data['daen_isavm']) ? $data['daen_isavm'] : null;
        $this->container['daen_isunk'] = isset($data['daen_isunk']) ? $data['daen_isunk'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets daen_id
     * @return int
     */
    public function getDaenId()
    {
        return $this->container['daen_id'];
    }

    /**
     * Sets daen_id
     * @param int $daen_id
     * @return $this
     */
    public function setDaenId($daen_id)
    {
        $this->container['daen_id'] = $daen_id;

        return $this;
    }

    /**
     * Gets daen_serial
     * @return int
     */
    public function getDaenSerial()
    {
        return $this->container['daen_serial'];
    }

    /**
     * Sets daen_serial
     * @param int $daen_serial
     * @return $this
     */
    public function setDaenSerial($daen_serial)
    {
        $this->container['daen_serial'] = $daen_serial;

        return $this;
    }

    /**
     * Gets daen_stet_id
     * @return int
     */
    public function getDaenStetId()
    {
        return $this->container['daen_stet_id'];
    }

    /**
     * Sets daen_stet_id
     * @param int $daen_stet_id
     * @return $this
     */
    public function setDaenStetId($daen_stet_id)
    {
        $this->container['daen_stet_id'] = $daen_stet_id;

        return $this;
    }

    /**
     * Gets daen_stet_name
     * @return string
     */
    public function getDaenStetName()
    {
        return $this->container['daen_stet_name'];
    }

    /**
     * Sets daen_stet_name
     * @param string $daen_stet_name
     * @return $this
     */
    public function setDaenStetName($daen_stet_name)
    {
        $this->container['daen_stet_name'] = $daen_stet_name;

        return $this;
    }

    /**
     * Gets daen_firstname
     * @return string
     */
    public function getDaenFirstname()
    {
        return $this->container['daen_firstname'];
    }

    /**
     * Sets daen_firstname
     * @param string $daen_firstname
     * @return $this
     */
    public function setDaenFirstname($daen_firstname)
    {
        $this->container['daen_firstname'] = $daen_firstname;

        return $this;
    }

    /**
     * Gets daen_firstnamejcb
     * @return double
     */
    public function getDaenFirstnamejcb()
    {
        return $this->container['daen_firstnamejcb'];
    }

    /**
     * Sets daen_firstnamejcb
     * @param double $daen_firstnamejcb
     * @return $this
     */
    public function setDaenFirstnamejcb($daen_firstnamejcb)
    {
        $this->container['daen_firstnamejcb'] = $daen_firstnamejcb;

        return $this;
    }

    /**
     * Gets daen_middlename
     * @return string
     */
    public function getDaenMiddlename()
    {
        return $this->container['daen_middlename'];
    }

    /**
     * Sets daen_middlename
     * @param string $daen_middlename
     * @return $this
     */
    public function setDaenMiddlename($daen_middlename)
    {
        $this->container['daen_middlename'] = $daen_middlename;

        return $this;
    }

    /**
     * Gets daen_middlenamejcb
     * @return double
     */
    public function getDaenMiddlenamejcb()
    {
        return $this->container['daen_middlenamejcb'];
    }

    /**
     * Sets daen_middlenamejcb
     * @param double $daen_middlenamejcb
     * @return $this
     */
    public function setDaenMiddlenamejcb($daen_middlenamejcb)
    {
        $this->container['daen_middlenamejcb'] = $daen_middlenamejcb;

        return $this;
    }

    /**
     * Gets daen_lastname
     * @return string
     */
    public function getDaenLastname()
    {
        return $this->container['daen_lastname'];
    }

    /**
     * Sets daen_lastname
     * @param string $daen_lastname
     * @return $this
     */
    public function setDaenLastname($daen_lastname)
    {
        $this->container['daen_lastname'] = $daen_lastname;

        return $this;
    }

    /**
     * Gets daen_lastnamejcb
     * @return double
     */
    public function getDaenLastnamejcb()
    {
        return $this->container['daen_lastnamejcb'];
    }

    /**
     * Sets daen_lastnamejcb
     * @param double $daen_lastnamejcb
     * @return $this
     */
    public function setDaenLastnamejcb($daen_lastnamejcb)
    {
        $this->container['daen_lastnamejcb'] = $daen_lastnamejcb;

        return $this;
    }

    /**
     * Gets daen_fullname
     * @return string
     */
    public function getDaenFullname()
    {
        return $this->container['daen_fullname'];
    }

    /**
     * Sets daen_fullname
     * @param string $daen_fullname
     * @return $this
     */
    public function setDaenFullname($daen_fullname)
    {
        $this->container['daen_fullname'] = $daen_fullname;

        return $this;
    }

    /**
     * Gets daen_title
     * @return string
     */
    public function getDaenTitle()
    {
        return $this->container['daen_title'];
    }

    /**
     * Sets daen_title
     * @param string $daen_title
     * @return $this
     */
    public function setDaenTitle($daen_title)
    {
        $this->container['daen_title'] = $daen_title;

        return $this;
    }

    /**
     * Gets daen_suffix
     * @return string
     */
    public function getDaenSuffix()
    {
        return $this->container['daen_suffix'];
    }

    /**
     * Sets daen_suffix
     * @param string $daen_suffix
     * @return $this
     */
    public function setDaenSuffix($daen_suffix)
    {
        $this->container['daen_suffix'] = $daen_suffix;

        return $this;
    }

    /**
     * Gets daen_partition
     * @return string
     */
    public function getDaenPartition()
    {
        return $this->container['daen_partition'];
    }

    /**
     * Sets daen_partition
     * @param string $daen_partition
     * @return $this
     */
    public function setDaenPartition($daen_partition)
    {
        $this->container['daen_partition'] = $daen_partition;

        return $this;
    }

    /**
     * Gets daen_reverse
     * @return bool
     */
    public function getDaenReverse()
    {
        return $this->container['daen_reverse'];
    }

    /**
     * Sets daen_reverse
     * @param bool $daen_reverse
     * @return $this
     */
    public function setDaenReverse($daen_reverse)
    {
        $this->container['daen_reverse'] = $daen_reverse;

        return $this;
    }

    /**
     * Gets daen_ispep
     * @return bool
     */
    public function getDaenIspep()
    {
        return $this->container['daen_ispep'];
    }

    /**
     * Sets daen_ispep
     * @param bool $daen_ispep
     * @return $this
     */
    public function setDaenIspep($daen_ispep)
    {
        $this->container['daen_ispep'] = $daen_ispep;

        return $this;
    }

    /**
     * Gets daen_isrca
     * @return bool
     */
    public function getDaenIsrca()
    {
        return $this->container['daen_isrca'];
    }

    /**
     * Sets daen_isrca
     * @param bool $daen_isrca
     * @return $this
     */
    public function setDaenIsrca($daen_isrca)
    {
        $this->container['daen_isrca'] = $daen_isrca;

        return $this;
    }

    /**
     * Gets daen_iswbl
     * @return bool
     */
    public function getDaenIswbl()
    {
        return $this->container['daen_iswbl'];
    }

    /**
     * Sets daen_iswbl
     * @param bool $daen_iswbl
     * @return $this
     */
    public function setDaenIswbl($daen_iswbl)
    {
        $this->container['daen_iswbl'] = $daen_iswbl;

        return $this;
    }

    /**
     * Gets daen_issan
     * @return bool
     */
    public function getDaenIssan()
    {
        return $this->container['daen_issan'];
    }

    /**
     * Sets daen_issan
     * @param bool $daen_issan
     * @return $this
     */
    public function setDaenIssan($daen_issan)
    {
        $this->container['daen_issan'] = $daen_issan;

        return $this;
    }

    /**
     * Gets daen_isavm
     * @return bool
     */
    public function getDaenIsavm()
    {
        return $this->container['daen_isavm'];
    }

    /**
     * Sets daen_isavm
     * @param bool $daen_isavm
     * @return $this
     */
    public function setDaenIsavm($daen_isavm)
    {
        $this->container['daen_isavm'] = $daen_isavm;

        return $this;
    }

    /**
     * Gets daen_isunk
     * @return bool
     */
    public function getDaenIsunk()
    {
        return $this->container['daen_isunk'];
    }

    /**
     * Sets daen_isunk
     * @param bool $daen_isunk
     * @return $this
     */
    public function setDaenIsunk($daen_isunk)
    {
        $this->container['daen_isunk'] = $daen_isunk;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


